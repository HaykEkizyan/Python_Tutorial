#1

arr = [1, 2, "fruit", "water"]
print(arr[3])  #  water


#2

arr = [1, 2, "fruit", "water"]
print(arr[1])  #  2


#3

matrix = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]
]
for row in matrix:
    for item in row:
        print(item) 
       """
        1
        2
        3
        4
        5
        6
        7
        8
        9
       """

#4 If the first number in a slice is omitted, it is taken to be the start of the list. If the second number is omitted, ...

squares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
print(squares[:7])
print(squares[7:])
"""
[0, 1, 4, 9, 16, 25, 36]
[49, 64, 81]
"""

#5 List slices can also have a third number, representing the step, to include only alternate values in the slice.
   [2:8:3] will include elements starting

squares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
print(squares[2:8:3])
print(squares[2::3])
print(squares[::2])
"""
[4, 25]
[4, 25, 64]
[0, 4, 16, 36, 64]
"""


#6 Negative values can be used in list slicing (and normal list indexing). When negative values are used for the first and 
   second values in a slice (or a normal index), they count from the end of the list.
   If a negative value is used for the step, the slice is done backwards.
   Using [::-1] as a slice is a common and idiomatic way to reverse a list.
   
squares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
print(squares[1::4])
print(squares[3:-1])
print(squares[::-1])
"""
[1, 25, 81]
[9, 16, 25, 36, 49, 64]
[81, 64, 49, 36, 25, 16, 9, 4, 1, 0]
"""



